using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using EasyExploits;
using WeAreDevs_API;
namespace suicide_exploit
{
    public partial class suicide_executer : Form
    {
        private Point lastPoint;

        public suicide_executer()
        {
            InitializeComponent();
        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (EasyExploitRadioButton.Checked == true)
            {
                MessageBox.Show("that will take a few moment to inject");
                EasyExploits.Module api = new EasyExploits.Module();
                api.LaunchExploit();
                MessageBox.Show("Note if roblox crash that mean the api is out of date");
                return;
            }
            else if (WrdRadioButton.Checked == true)
            {
                MessageBox.Show("that will take a few moment to inject");
                WeAreDevs_API.ExploitAPI api = new WeAreDevs_API.ExploitAPI();
                api.LaunchExploit();
                MessageBox.Show("Note if roblox crash that mean the api is out of date");
                return;
            }
            else
            {
                MessageBox.Show("Select an api from the settings ur baka");
                return;
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            string script = fastColoredTextBox1.Text;
            sendscript(script);
        }

        private void sendscript(string script)
        {
            if (EasyExploitRadioButton.Checked == true)
            {
                EasyExploits.Module lol = new EasyExploits.Module();
                lol.ExecuteScript(script);
                return;
            }
            else if (WrdRadioButton.Checked == true)
            {
                WeAreDevs_API.ExploitAPI api = new WeAreDevs_API.ExploitAPI();
                api.SendLuaScript(script);
                return;
            }

            else
            {
                MessageBox.Show("Select your DLL on your Settings baka");
                return;
            }
        }

        private void label6_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void label7_Click(object sender, EventArgs e)
        {
            WindowState = FormWindowState.Minimized;
        }

        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            fastColoredTextBox1.Text = File.ReadAllText($"./Scripts/{listBox1.SelectedItem}");
        }

        private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
        {

        }

        private void button6_Click(object sender, EventArgs e)
        {


        }

        private void button6_Click_1(object sender, EventArgs e)
        {
        }

        private void button3_Click(object sender, EventArgs e)
        {
            OpenFileDialog openFileDialog1 = new OpenFileDialog();
            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                openFileDialog1.Title = "Open";
                fastColoredTextBox1.Text = File.ReadAllText(openFileDialog1.FileName);
            }
        }

        private void label4_Click(object sender, EventArgs e)
        {
            Options.Hide();
        }

        private void label5_Click(object sender, EventArgs e)
        {
            Scripts.Hide();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            Scripts.Show();
        }

        private void button5_Click(object sender, EventArgs e)
        {
            Options.Show();
        }

        private void Options_Paint(object sender, PaintEventArgs e)
        {

        }

        private void panel1_MouseDown(object sender, MouseEventArgs e)
        {
            lastPoint = new Point(e.X, e.Y);
        }

        private void panel1_MouseMove(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                this.Left += e.X - lastPoint.X;
                this.Top += e.Y - lastPoint.Y;
            }
        }

        private void fastColoredTextBox1_Load(object sender, EventArgs e)
        {

        }

        private void button6_Click_2(object sender, EventArgs e)
        {

        }

        private void button6_Click_3(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            Functions.PopulateListBox(listBox1, "./Scripts", "*.txt");
            Functions.PopulateListBox(listBox1, "./Scripts", "*.lua");
        }
    }
}
